/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
        };

        bt1 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <25 13>;
        };

        bt2 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <26 14>;
        };

        bt3 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <27 15>;
        };

        fn_audio_out {
            bindings = <&macro_audioout>;
            key-positions = <11 40>;
        };

        fn_no_camera {
            bindings = <&macro_no_camera>;
            key-positions = <10 40>;
        };

        fn_mute {
            bindings = <&macro_mute>;
            key-positions = <9 40>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <7 8>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <31 32>;
        };

        righShift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <19 20>;
        };
    };

    macros {
        macro_audioout: macro_audioout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LC(LG(V))>;
            label = "MACRO_AUDIOOUT";
        };

        macro_mute: macro_mute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LC(LS(M))>;
            label = "MACRO_MUTE";
        };

        macro_no_camera: macro_no_camera {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LC(LS(O))>;
            label = "MACRO_NO_CAMERA";
        };

        macro_base_layer: macro_base_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &to 0>;
            label = "MACRO_BASE_LAYER";
        };
    };

    behaviors {
        layerTapHold: layerTapHold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAPHOLD";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y                  &kp U              &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H                  &kp J              &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N                  &kp M              &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 2  &kp SPACE    &mt RIGHT_SHIFT ENTER  &layerTapHold 1 1  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Num Arrows";
            bindings = <
&kp TAB    &kp N1   &kp N2          &kp N3          &kp N4     &kp N5       &kp N6     &kp N7          &kp N8          &kp N9     &kp N0     &kp BSPC
&kp LCTRL  &kp DEL  &kp INS         &kp UP_ARROW    &kp HOME   &kp END      &trans     &trans          &kp UP_ARROW    &trans     &kp PG_UP  &trans
&kp LSHFT  &trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans       &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp PG_DN  &trans
                                    &kp LGUI        &to 0      &kp SPACE    &kp ENTER  &tog 2          &lt 0 LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Special";
            bindings = <
&kp LA(TAB)  &kp EXCL  &kp AT  &kp HASH  &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL    &trans    &trans  &trans    &kp QUESTION  &kp TILDE    &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans    &trans  &trans    &trans        &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                               &kp LGUI  &to 1         &kp SPACE    &kp RET    &tog 3     &lt 0 LEFT_ALT
            >;
        };

        functions {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9          &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp F5          &kp F5   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans   &trans   &trans
                        &trans  &to 2   &trans    &trans  &tog 4  &lt 0 LEFT_ALT
            >;

            label = "Functions";
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp N7  &kp N8  &kp N9  &kp KP_SUBTRACT  &kp KP_DIVIDE  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N4  &kp N5  &kp N6  &kp KP_PLUS      &kp ASTRK      &trans
&trans  &trans  &trans  &trans  &trans  &kp N0    &kp N1  &kp N2  &kp N3  &kp DOT          &trans         &trans
                        &trans  &to 3   &trans    &trans  &to 5   &trans
            >;

            label = "Num Pad";
        };

        colemakdh {
            bindings = <
&trans  &kp Q  &kp W  &kp F   &kp P  &kp G        &kp J      &kp L  &kp U      &kp Y    &trans    &trans
&trans  &kp A  &kp R  &kp S   &kp T  &kp D        &kp H      &kp N  &kp E      &kp I    &kp O     &trans
&trans  &kp Z  &kp X  &kp C   &kp V  &kp B        &kp K      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &to 4  &kp SPACE    &kp ENTER  &to 6  &trans
            >;

            label = "Colemak-Dh";
        };

        config {
            bindings = <
&trans      &kp CLCK      &trans        &trans        &trans        &trans          &none           &none           &none      &none  &none  &none
&trans      &trans        &trans        &trans        &trans        &trans          &none           &kp UP_ARROW    &none      &none  &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none  &none  &trans
                                        &trans        &to 0         &trans          &trans          &trans          &trans
            >;

            label = "Config";
        };
    };
};
